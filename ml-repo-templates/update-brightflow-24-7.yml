name: Update BrightFlow Website - 24/7 Money Making Mode
on:
  # 24/7 schedule for maximum money-making opportunities
  schedule:
    - cron: '*/15 * * * *'      # Every 15 minutes, 24/7
    - cron: '*/5 9-16 * * 1-5'  # Every 5 minutes during US market hours (9 AM - 4 PM EST)
    - cron: '*/10 0-8 * * *'    # Every 10 minutes during Asian/European hours
    - cron: '*/20 17-23 * * *'  # Every 20 minutes during evening hours
  
  # Manual trigger for emergency updates or testing
  workflow_dispatch:
    inputs:
      emergency_update:
        description: 'Force update regardless of schedule'
        required: false
        default: 'false'
        type: boolean
      market_focus:
        description: 'Which market to focus on'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - us
          - asian
          - european
          - crypto
          - forex

jobs:
  update-brightflow-24-7:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout ML Repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install requests pandas numpy yfinance python-dateutil ccxt
        # Add your specific ML dependencies here
        # pip install -r requirements.txt
        
    - name: Determine Market Focus
      id: market_focus
      run: |
        python3 << EOF
        from datetime import datetime, timezone, timedelta
        import os
        
        now = datetime.now(timezone.utc)
        est = now - timedelta(hours=5)  # Convert to EST
        hour = est.hour
        day = est.weekday()  # 0 = Monday, 6 = Sunday
        
        # Determine which markets are active
        us_active = day < 5 and 9 <= hour < 16  # US market hours
        asian_active = day < 5 and (hour >= 19 or hour < 4)  # Asian market hours
        european_active = day < 5 and 3 <= hour < 11  # European market hours
        
        # Always include crypto and forex (24/7)
        crypto_active = True
        forex_active = True
        
        print(f"US Market Active: {us_active}")
        print(f"Asian Market Active: {asian_active}")
        print(f"European Market Active: {european_active}")
        print(f"Crypto Active: {crypto_active}")
        print(f"Forex Active: {forex_active}")
        
        # Set environment variables for the ML pipeline
        with open('$GITHUB_ENV', 'a') as f:
            f.write(f'US_MARKET_ACTIVE={us_active}\n')
            f.write(f'ASIAN_MARKET_ACTIVE={asian_active}\n')
            f.write(f'EUROPEAN_MARKET_ACTIVE={european_active}\n')
            f.write(f'CRYPTO_ACTIVE={crypto_active}\n')
            f.write(f'FOREX_ACTIVE={forex_active}\n')
        EOF
        
    - name: Run 24/7 ML Pipeline
      run: |
        echo "🚀 Running 24/7 ML Pipeline for maximum money-making..."
        echo "US Market Active: $US_MARKET_ACTIVE"
        echo "Asian Market Active: $ASIAN_MARKET_ACTIVE"
        echo "European Market Active: $EUROPEAN_MARKET_ACTIVE"
        echo "Crypto Active: $CRYPTO_ACTIVE"
        echo "Forex Active: $FOREX_ACTIVE"
        
        # Run your ML pipeline with market-specific focus
        python3 generate_brightflow_predictions.py \
          --us-market=$US_MARKET_ACTIVE \
          --asian-market=$ASIAN_MARKET_ACTIVE \
          --european-market=$EUROPEAN_MARKET_ACTIVE \
          --crypto=$CRYPTO_ACTIVE \
          --forex=$FOREX_ACTIVE \
          --aggressive-mode=true
        
    - name: Update Website Data
      run: |
        echo "📊 Updating website with fresh data..."
        python3 update_brightflow_website.py \
          --performance-file=performance_data.json \
          --transaction-file=transaction_data.json \
          --force-update=true
          
    - name: Verify Data Update
      run: |
        echo "✅ Verifying data update..."
        python3 verify_website_update.py
        
    - name: Notify on Failure
      if: failure()
      run: |
        echo "❌ ML Pipeline failed - money-making opportunity missed!"
        # Add your notification logic here (Slack, email, etc.)
        
    - name: Success Notification
      if: success()
      run: |
        echo "💰 ML Pipeline completed successfully - money made!"
        # Add your success notification logic here
